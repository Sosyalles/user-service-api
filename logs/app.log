{"timestamp":"2025-02-12T22:51:37.975Z","level":"debug","message":"Executing (default): SELECT 1+1 AS result"}
{"timestamp":"2025-02-12T22:51:37.980Z","level":"info","message":"Database connection has been established successfully."}
{"timestamp":"2025-02-12T22:51:37.981Z","level":"info","message":"Database connection established successfully"}
{"timestamp":"2025-02-12T22:51:37.985Z","level":"info","message":"Server is running in development mode on port 3000"}
{"timestamp":"2025-02-12T22:51:37.986Z","level":"info","message":"API Documentation available at http://localhost:3000/api-docs"}
{"timestamp":"2025-02-12T22:53:19.404Z","level":"debug","message":"Executing (default): SELECT 1+1 AS result"}
{"timestamp":"2025-02-12T22:53:19.409Z","level":"info","message":"Database connection has been established successfully."}
{"timestamp":"2025-02-12T22:53:19.409Z","level":"info","message":"Database connection established successfully"}
{"timestamp":"2025-02-12T22:53:19.414Z","level":"info","message":"Server is running in development mode on port 3000"}
{"timestamp":"2025-02-12T22:53:19.415Z","level":"info","message":"API Documentation available at http://localhost:3000/api-docs"}
{"timestamp":"2025-02-12T22:56:44.014Z","level":"debug","message":"Executing (default): SELECT 1+1 AS result"}
{"timestamp":"2025-02-12T22:56:44.018Z","level":"info","message":"Database connection has been established successfully."}
{"timestamp":"2025-02-12T22:56:44.018Z","level":"info","message":"Database connection established successfully"}
{"timestamp":"2025-02-12T22:56:44.020Z","level":"info","message":"Server is running in development mode on port 3000"}
{"timestamp":"2025-02-12T22:56:44.021Z","level":"info","message":"API Documentation available at http://localhost:3000/api-docs"}
{"timestamp":"2025-02-12T22:58:38.534Z","level":"debug","message":"Executing (default): SELECT 1+1 AS result"}
{"timestamp":"2025-02-12T22:58:38.543Z","level":"info","message":"Database connection has been established successfully."}
{"timestamp":"2025-02-12T22:58:38.544Z","level":"info","message":"Database connection established successfully"}
{"timestamp":"2025-02-12T22:58:38.547Z","level":"info","message":"Server is running in development mode on port 3000"}
{"timestamp":"2025-02-12T22:58:38.548Z","level":"info","message":"API Documentation available at http://localhost:3000/api-docs"}
{"timestamp":"2025-02-12T22:59:42.744Z","level":"debug","message":"Executing (default): SELECT 1+1 AS result"}
{"timestamp":"2025-02-12T22:59:42.746Z","level":"info","message":"Database connection has been established successfully."}
{"timestamp":"2025-02-12T22:59:54.148Z","level":"error","message":"Authentication error:","error":"Invalid token format. Use Bearer token","path":"/","method":"GET","ip":"::ffff:172.22.0.1"}
{"timestamp":"2025-02-12T22:59:54.151Z","level":"warn","message":"Invalid token format. Use Bearer token","stack":"Error: Invalid token format. Use Bearer token\n    at new AuthenticationError (/usr/src/app/src/errors/AppError.ts:23:5)\n    at authenticateJWT (/usr/src/app/src/middlewares/auth.ts:40:13)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/usr/src/app/node_modules/express/lib/router/index.js:328:13)\n    at /usr/src/app/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/usr/src/app/node_modules/express/lib/router/index.js:346:12)\n    at next (/usr/src/app/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/usr/src/app/node_modules/express/lib/router/index.js:175:3)\n    at router (/usr/src/app/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)","statusCode":401,"path":"/api/v1/profile","method":"GET"}
{"timestamp":"2025-02-12T23:06:40.229Z","level":"error","message":"API key authentication error:","error":"X-API-KEY header is missing","path":"/users","method":"GET","ip":"::ffff:172.22.0.1"}
{"timestamp":"2025-02-12T23:06:40.235Z","level":"warn","message":"X-API-KEY header is missing","stack":"Error: X-API-KEY header is missing\n    at new AuthorizationError (/usr/src/app/src/errors/AppError.ts:29:5)\n    at authenticateApiKey (/usr/src/app/src/middlewares/auth.ts:117:13)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/usr/src/app/node_modules/express/lib/router/index.js:328:13)\n    at /usr/src/app/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/usr/src/app/node_modules/express/lib/router/index.js:346:12)\n    at next (/usr/src/app/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/usr/src/app/node_modules/express/lib/router/index.js:175:3)\n    at router (/usr/src/app/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)","statusCode":403,"path":"/api/v1/admin/users","method":"GET"}
{"timestamp":"2025-02-12T23:07:10.080Z","level":"error","message":"API key authentication error:","error":"X-API-KEY header is missing","path":"/users","method":"GET","ip":"::ffff:172.22.0.1"}
{"timestamp":"2025-02-12T23:07:10.084Z","level":"warn","message":"X-API-KEY header is missing","stack":"Error: X-API-KEY header is missing\n    at new AuthorizationError (/usr/src/app/src/errors/AppError.ts:29:5)\n    at authenticateApiKey (/usr/src/app/src/middlewares/auth.ts:117:13)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/usr/src/app/node_modules/express/lib/router/index.js:328:13)\n    at /usr/src/app/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/usr/src/app/node_modules/express/lib/router/index.js:346:12)\n    at next (/usr/src/app/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/usr/src/app/node_modules/express/lib/router/index.js:175:3)\n    at router (/usr/src/app/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)","statusCode":403,"path":"/api/v1/admin/users","method":"GET"}
{"timestamp":"2025-02-12T23:11:02.716Z","level":"debug","message":"Executing (default): SELECT 1+1 AS result"}
{"timestamp":"2025-02-12T23:11:02.719Z","level":"info","message":"Database connection has been established successfully."}
{"timestamp":"2025-02-12T23:11:02.720Z","level":"info","message":"Database connection established successfully"}
{"timestamp":"2025-02-12T23:11:02.725Z","level":"info","message":"Server is running in development mode on port 3000"}
{"timestamp":"2025-02-12T23:11:02.726Z","level":"info","message":"API Documentation available at http://localhost:3000/api-docs"}
{"timestamp":"2025-02-12T23:11:26.138Z","level":"error","message":"API key authentication error:","error":"X-API-KEY header is missing","path":"/users","method":"GET","ip":"::ffff:172.22.0.1"}
{"timestamp":"2025-02-12T23:11:26.140Z","level":"warn","message":"X-API-KEY header is missing","stack":"Error: X-API-KEY header is missing\n    at new AuthorizationError (/usr/src/app/src/errors/AppError.ts:29:5)\n    at authenticateApiKey (/usr/src/app/src/middlewares/auth.ts:117:13)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/usr/src/app/node_modules/express/lib/router/index.js:328:13)\n    at /usr/src/app/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/usr/src/app/node_modules/express/lib/router/index.js:346:12)\n    at next (/usr/src/app/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/usr/src/app/node_modules/express/lib/router/index.js:175:3)\n    at router (/usr/src/app/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)","statusCode":403,"path":"/api/v1/admin/users","method":"GET"}
{"timestamp":"2025-02-12T23:11:38.825Z","level":"debug","message":"API key authentication successful"}
{"timestamp":"2025-02-12T23:11:38.862Z","level":"debug","message":"Executing (default): SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"}
{"timestamp":"2025-02-12T23:11:38.864Z","level":"debug","message":"Executing (default): SELECT \"id\", \"username\", \"email\", \"password\", \"firstName\", \"lastName\", \"isActive\", \"lastLoginAt\", \"createdAt\", \"updatedAt\" FROM \"users\" AS \"User\" ORDER BY \"User\".\"createdAt\" DESC LIMIT 10 OFFSET 0;"}
{"timestamp":"2025-02-12T23:11:38.902Z","level":"error","message":"Error in getAllUsers controller: relation \"users\" does not exist","name":"SequelizeDatabaseError","parent":{"length":104,"name":"error","severity":"ERROR","code":"42P01","position":"33","file":"parse_relation.c","line":"1381","routine":"parserOpenTable","sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"},"original":{"length":104,"name":"error","severity":"ERROR","code":"42P01","position":"33","file":"parse_relation.c","line":"1381","routine":"parserOpenTable","sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"},"sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";","parameters":{},"stack":"Error\n    at Query.run (/usr/src/app/node_modules/sequelize/src/dialects/postgres/query.js:76:25)\n    at /usr/src/app/node_modules/sequelize/src/sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.rawSelect (/usr/src/app/node_modules/sequelize/src/dialects/abstract/query-interface.js:1043:18)\n    at async Function.aggregate (/usr/src/app/node_modules/sequelize/src/model.js:2067:19)\n    at async Function.count (/usr/src/app/node_modules/sequelize/src/model.js:2124:20)\n    at async Promise.all (index 0)\n    at async Function.findAndCountAll (/usr/src/app/node_modules/sequelize/src/model.js:2183:27)\n    at async UserRepository.findAll (/usr/src/app/src/repositories/UserRepository.ts:58:29)\n    at async UserService.getAllUsers (/usr/src/app/src/services/UserService.ts:142:30)"}
{"timestamp":"2025-02-12T23:11:38.905Z","level":"error","message":"relation \"users\" does not exist","stack":"Error\n    at Query.run (/usr/src/app/node_modules/sequelize/src/dialects/postgres/query.js:76:25)\n    at /usr/src/app/node_modules/sequelize/src/sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.rawSelect (/usr/src/app/node_modules/sequelize/src/dialects/abstract/query-interface.js:1043:18)\n    at async Function.aggregate (/usr/src/app/node_modules/sequelize/src/model.js:2067:19)\n    at async Function.count (/usr/src/app/node_modules/sequelize/src/model.js:2124:20)\n    at async Promise.all (index 0)\n    at async Function.findAndCountAll (/usr/src/app/node_modules/sequelize/src/model.js:2183:27)\n    at async UserRepository.findAll (/usr/src/app/src/repositories/UserRepository.ts:58:29)\n    at async UserService.getAllUsers (/usr/src/app/src/services/UserService.ts:142:30)","path":"/api/v1/admin/users","method":"GET"}
{"timestamp":"2025-02-12T23:11:45.342Z","level":"debug","message":"API key authentication successful"}
{"timestamp":"2025-02-12T23:11:45.347Z","level":"debug","message":"Executing (default): SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"}
{"timestamp":"2025-02-12T23:11:45.348Z","level":"debug","message":"Executing (default): SELECT \"id\", \"username\", \"email\", \"password\", \"firstName\", \"lastName\", \"isActive\", \"lastLoginAt\", \"createdAt\", \"updatedAt\" FROM \"users\" AS \"User\" ORDER BY \"User\".\"createdAt\" DESC LIMIT 10 OFFSET 0;"}
{"timestamp":"2025-02-12T23:11:45.351Z","level":"error","message":"Error in getAllUsers controller: relation \"users\" does not exist","name":"SequelizeDatabaseError","parent":{"length":104,"name":"error","severity":"ERROR","code":"42P01","position":"33","file":"parse_relation.c","line":"1381","routine":"parserOpenTable","sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"},"original":{"length":104,"name":"error","severity":"ERROR","code":"42P01","position":"33","file":"parse_relation.c","line":"1381","routine":"parserOpenTable","sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"},"sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";","parameters":{},"stack":"Error\n    at Query.run (/usr/src/app/node_modules/sequelize/src/dialects/postgres/query.js:76:25)\n    at /usr/src/app/node_modules/sequelize/src/sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.rawSelect (/usr/src/app/node_modules/sequelize/src/dialects/abstract/query-interface.js:1043:18)\n    at async Function.aggregate (/usr/src/app/node_modules/sequelize/src/model.js:2067:19)\n    at async Function.count (/usr/src/app/node_modules/sequelize/src/model.js:2124:20)\n    at async Promise.all (index 0)\n    at async Function.findAndCountAll (/usr/src/app/node_modules/sequelize/src/model.js:2183:27)\n    at async UserRepository.findAll (/usr/src/app/src/repositories/UserRepository.ts:58:29)\n    at async UserService.getAllUsers (/usr/src/app/src/services/UserService.ts:142:30)"}
{"timestamp":"2025-02-12T23:11:45.353Z","level":"error","message":"relation \"users\" does not exist","stack":"Error\n    at Query.run (/usr/src/app/node_modules/sequelize/src/dialects/postgres/query.js:76:25)\n    at /usr/src/app/node_modules/sequelize/src/sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.rawSelect (/usr/src/app/node_modules/sequelize/src/dialects/abstract/query-interface.js:1043:18)\n    at async Function.aggregate (/usr/src/app/node_modules/sequelize/src/model.js:2067:19)\n    at async Function.count (/usr/src/app/node_modules/sequelize/src/model.js:2124:20)\n    at async Promise.all (index 0)\n    at async Function.findAndCountAll (/usr/src/app/node_modules/sequelize/src/model.js:2183:27)\n    at async UserRepository.findAll (/usr/src/app/src/repositories/UserRepository.ts:58:29)\n    at async UserService.getAllUsers (/usr/src/app/src/services/UserService.ts:142:30)","path":"/api/v1/admin/users","method":"GET"}
{"timestamp":"2025-02-12T23:12:03.208Z","level":"debug","message":"API key authentication successful"}
{"timestamp":"2025-02-12T23:12:03.238Z","level":"debug","message":"Executing (default): SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"}
{"timestamp":"2025-02-12T23:12:03.243Z","level":"debug","message":"Executing (default): SELECT \"id\", \"username\", \"email\", \"password\", \"firstName\", \"lastName\", \"isActive\", \"lastLoginAt\", \"createdAt\", \"updatedAt\" FROM \"users\" AS \"User\" ORDER BY \"User\".\"createdAt\" DESC LIMIT 10 OFFSET 0;"}
{"timestamp":"2025-02-12T23:12:03.243Z","level":"error","message":"Error in getAllUsers controller: relation \"users\" does not exist","name":"SequelizeDatabaseError","parent":{"length":104,"name":"error","severity":"ERROR","code":"42P01","position":"33","file":"parse_relation.c","line":"1381","routine":"parserOpenTable","sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"},"original":{"length":104,"name":"error","severity":"ERROR","code":"42P01","position":"33","file":"parse_relation.c","line":"1381","routine":"parserOpenTable","sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";"},"sql":"SELECT count(*) AS \"count\" FROM \"users\" AS \"User\";","parameters":{},"stack":"Error\n    at Query.run (/usr/src/app/node_modules/sequelize/src/dialects/postgres/query.js:76:25)\n    at /usr/src/app/node_modules/sequelize/src/sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.rawSelect (/usr/src/app/node_modules/sequelize/src/dialects/abstract/query-interface.js:1043:18)\n    at async Function.aggregate (/usr/src/app/node_modules/sequelize/src/model.js:2067:19)\n    at async Function.count (/usr/src/app/node_modules/sequelize/src/model.js:2124:20)\n    at async Promise.all (index 0)\n    at async Function.findAndCountAll (/usr/src/app/node_modules/sequelize/src/model.js:2183:27)\n    at async UserRepository.findAll (/usr/src/app/src/repositories/UserRepository.ts:58:29)\n    at async UserService.getAllUsers (/usr/src/app/src/services/UserService.ts:142:30)"}
{"timestamp":"2025-02-12T23:12:03.251Z","level":"error","message":"relation \"users\" does not exist","stack":"Error\n    at Query.run (/usr/src/app/node_modules/sequelize/src/dialects/postgres/query.js:76:25)\n    at /usr/src/app/node_modules/sequelize/src/sequelize.js:650:28\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.rawSelect (/usr/src/app/node_modules/sequelize/src/dialects/abstract/query-interface.js:1043:18)\n    at async Function.aggregate (/usr/src/app/node_modules/sequelize/src/model.js:2067:19)\n    at async Function.count (/usr/src/app/node_modules/sequelize/src/model.js:2124:20)\n    at async Promise.all (index 0)\n    at async Function.findAndCountAll (/usr/src/app/node_modules/sequelize/src/model.js:2183:27)\n    at async UserRepository.findAll (/usr/src/app/src/repositories/UserRepository.ts:58:29)\n    at async UserService.getAllUsers (/usr/src/app/src/services/UserService.ts:142:30)","path":"/api/v1/admin/users","method":"GET"}
