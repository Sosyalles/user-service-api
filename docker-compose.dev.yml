version: '3.8'

services:
  user-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: user-service-dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      # Server Configuration
      - NODE_ENV=development
      - PORT=3000
      - API_VERSION=v1
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=user_service_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      # JWT Configuration
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=24h
      # API Key for Internal Service Communication
      - X_API_KEY=your_internal_api_key_here
      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - AUTH_RATE_LIMIT_WINDOW_MS=900000
      - AUTH_RATE_LIMIT_MAX_REQUESTS=5
      # Logging
      - LOG_LEVEL=debug
      - LOG_FILE_PATH=logs/app.log
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm run migrate && npm run dev"
    networks:
      - user-service-network

  postgres:
    image: postgres:14-alpine
    container_name: user-service-postgres-dev
    environment:
      - POSTGRES_DB=user_service_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - user-service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  user-service-network:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local 